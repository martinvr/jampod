// Copyright (c) 2014, StrongLoop Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#ifndef SRC_GCINFO_BATON_H_
#define SRC_GCINFO_BATON_H_

#include "queue.h"
#include "v8.h"

namespace strongloop {
namespace agent {
namespace gcinfo {

#define BATON_QUEUE_STATIC_INITIALIZER()                                      \
  QUEUE Baton::baton_queue = { &Baton::baton_queue, &Baton::baton_queue };

class Baton {
 public:
  static Baton* New(v8::Isolate* isolate,
                    v8::GCType type,
                    v8::GCCallbackFlags flags);
  static Baton* Pop();
  v8::GCType type() const;
  v8::GCCallbackFlags flags() const;
  const char* type_string() const;
  const char* flags_string() const;
  v8::HeapStatistics* heap_statistics() const;
  void Dispose();
 private:
  Baton(v8::Isolate* isolate, v8::GCType type, v8::GCCallbackFlags flags);
  // Forbid copy and assigment.
  Baton(const Baton&);
  void operator=(const Baton&);
  static QUEUE baton_queue;
  QUEUE baton_queue_;
  v8::GCType type_;
  v8::GCCallbackFlags flags_;
  v8::HeapStatistics heap_statistics_;
};

}  // namespace gcinfo
}  // namespace agent
}  // namespace strongloop

#endif  // SRC_GCINFO_BATON_H_
