// Copyright (c) 2014, StrongLoop Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#ifndef SRC_STRONG_AGENT_H_
#define SRC_STRONG_AGENT_H_

#include "node_version.h"
#include "v8.h"

namespace strongloop {
namespace agent {

#define SL_ARRAY_SIZE(a) (sizeof(a) / sizeof(*(a)))

// Assumption: the release after v0.12 will be v1.0, as prophesied.
#if NODE_MAJOR_VERSION == 0 && NODE_MINOR_VERSION >= 11
# define SL_NODE_VERSION 12  // v0.12
#elif NODE_MAJOR_VERSION == 0 && NODE_MINOR_VERSION == 10
# define SL_NODE_VERSION 10  // v0.10
#elif NODE_MAJOR_VERSION == 0 && NODE_MINOR_VERSION == 8
# define SL_NODE_VERSION 8   // v0.8
#else
# error "Unsupported node.js version."
#endif

#if SL_NODE_VERSION == 8 || SL_NODE_VERSION == 10
# define SL_FIXED_STRING(s) v8::String::New(s, sizeof(s) - 1)
#elif SL_NODE_VERSION == 12
# define SL_FIXED_STRING(isolate, s)                                          \
  v8::String::NewFromOneByte(isolate,                                         \
                             reinterpret_cast<const uint8_t*>(s),             \
                             v8::String::kNormalString,                       \
                             sizeof(s) - 1)
#endif

namespace gcinfo { void Initialize(v8::Handle<v8::Object>); }
namespace profiler { void Initialize(v8::Handle<v8::Object>); }

}  // namespace agent
}  // namespace strongloop

#endif  // SRC_STRONG_AGENT_H_
